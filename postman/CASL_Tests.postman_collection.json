{
  "info": {
    "name": "CASL Tests - Forecast Module",
    "description": "Collection pour tester l'int√©gration CASL sur le module Forecast",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "adminEmail",
      "value": "admin@example.com",
      "type": "string"
    },
    {
      "key": "adminPassword",
      "value": "admin123",
      "type": "string"
    },
    {
      "key": "userEmail",
      "value": "user@example.com",
      "type": "string"
    },
    {
      "key": "userPassword",
      "value": "user123",
      "type": "string"
    },
    {
      "key": "sessionToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "forecastId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login as Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Extract session token from cookies",
                  "const cookies = pm.cookies.get('next-auth.session-token');",
                  "if (cookies) {",
                  "    pm.collectionVariables.set('sessionToken', cookies);",
                  "    console.log('Session token saved:', cookies);",
                  "}",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{adminEmail}}\",\n  \"password\": \"{{adminPassword}}\",\n  \"redirect\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/callback/credentials",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "callback", "credentials"]
            }
          }
        },
        {
          "name": "Login as User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const cookies = pm.cookies.get('next-auth.session-token');",
                  "if (cookies) {",
                  "    pm.collectionVariables.set('sessionToken', cookies);",
                  "}",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"{{userPassword}}\",\n  \"redirect\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/callback/credentials",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "callback", "credentials"]
            }
          }
        }
      ]
    },
    {
      "name": "Permissions",
      "item": [
        {
          "name": "Get User Permissions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has permissions', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('permissions');",
                  "    pm.expect(jsonData.permissions).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Cookie",
                "value": "next-auth.session-token={{sessionToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/user/permissions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user", "permissions"]
            }
          }
        }
      ]
    },
    {
      "name": "Forecast - Admin Tests",
      "item": [
        {
          "name": "Read Forecasts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success', true);",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Cookie",
                "value": "next-auth.session-token={{sessionToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/forecast",
              "host": ["{{baseUrl}}"],
              "path": ["api", "forecast"]
            }
          }
        },
        {
          "name": "Create Forecast",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Forecast created successfully', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success', true);",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    ",
                  "    // Save forecast ID for later tests",
                  "    pm.collectionVariables.set('forecastId', jsonData.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Cookie",
                "value": "next-auth.session-token={{sessionToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": 1,\n  \"forecastDate\": \"2024-01-15\",\n  \"quantity\": 1000,\n  \"confidence\": 0.85\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/forecast",
              "host": ["{{baseUrl}}"],
              "path": ["api", "forecast"]
            }
          }
        },
        {
          "name": "Update Forecast",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Forecast updated successfully', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success', true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Cookie",
                "value": "next-auth.session-token={{sessionToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": {{forecastId}},\n  \"quantity\": 1500,\n  \"confidence\": 0.90\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/forecast",
              "host": ["{{baseUrl}}"],
              "path": ["api", "forecast"]
            }
          }
        },
        {
          "name": "Delete Forecast",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Forecast deleted successfully', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success', true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Cookie",
                "value": "next-auth.session-token={{sessionToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/forecast?id={{forecastId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "forecast"],
              "query": [
                {
                  "key": "id",
                  "value": "{{forecastId}}"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Forecast - User Tests (Should Fail)",
      "item": [
        {
          "name": "Read Forecasts (Should Pass)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": ["pm.test('Status code is 200', function () {", "    pm.response.to.have.status(200);", "});"],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Cookie",
                "value": "next-auth.session-token={{sessionToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/forecast",
              "host": ["{{baseUrl}}"],
              "path": ["api", "forecast"]
            }
          }
        },
        {
          "name": "Create Forecast (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 403', function () {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  "pm.test('Error message is correct', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.include('permission');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Cookie",
                "value": "next-auth.session-token={{sessionToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": 1,\n  \"forecastDate\": \"2024-01-15\",\n  \"quantity\": 1000,\n  \"confidence\": 0.85\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/forecast",
              "host": ["{{baseUrl}}"],
              "path": ["api", "forecast"]
            }
          }
        },
        {
          "name": "Update Forecast (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": ["pm.test('Status code is 403', function () {", "    pm.response.to.have.status(403);", "});"],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Cookie",
                "value": "next-auth.session-token={{sessionToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"quantity\": 1500,\n  \"confidence\": 0.90\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/forecast",
              "host": ["{{baseUrl}}"],
              "path": ["api", "forecast"]
            }
          }
        },
        {
          "name": "Delete Forecast (Should Fail)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": ["pm.test('Status code is 403', function () {", "    pm.response.to.have.status(403);", "});"],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Cookie",
                "value": "next-auth.session-token={{sessionToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/forecast?id=1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "forecast"],
              "query": [
                {
                  "key": "id",
                  "value": "1"
                }
              ]
            }
          }
        }
      ]
    }
  ]
}
